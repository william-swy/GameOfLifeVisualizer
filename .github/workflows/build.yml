name: Build Test and Lint

on: [push, pull_request]

jobs:
  build:
    env:
      BUILD_DIR: ${{ github.workspace }}/build
      BUILD_TYPE: Release
      CC: clang
      CXX: clang++
      APT_PACKAGES:
        curl unzip tar libxt-dev gperf libxaw7-dev cifs-utils build-essential \
        zip libxkbcommon-x11-dev libxi-dev libgl1-mesa-dev libglu1-mesa-dev \
        libxinerama-dev libxxf86vm-dev libxcursor-dev autoconf libudev-dev \
        libncurses5-dev libtool xutils-dev dh-autoreconf autoconf-archive \
        libgles2-mesa-dev
      # Additionally required by qt5-base
      QT_APT_PACKAGES:
              libxext-dev libxfixes-dev libxrender-dev \
              libxcb1-dev libx11-xcb-dev libxcb-glx0-dev libxcb-util0-dev

    name: ubuntu-latest-hosted-basic
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.9
        with:
          cmake-version: "3.18"

      - name: Cache vcpkg
        id: cache-vcpkg
        uses: pat-s/always-upload-cache@v2.1.5
        with:
          path: |
            ${{ github.workspace }}/vcpkg
            ${{ env.BUILD_DIR }}/vcpkg_installed
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}

      - name: Bootstrap vcpkg
        if: steps.cache-vcpkg.outputs.cache-hit != 'true'
        run: ${{ github.workspace }}/vcpkg/bootstrap-vcpkg.sh

      - name: Setup Ninja
        uses: ashutoshvarma/setup-ninja@master
        with:
          version: 1.10.0

      - name: Install Linux System Dependencies
        shell: bash
        run: |
          sudo apt-get -y update
          sudo apt-get -y dist-upgrade
          sudo apt-get -y install ${{ env.APT_PACKAGES }}
          sudo apt-get -y install ${{ env.QT_APT_PACKAGES }}

      - name: ${{ runner.os }} - Generate Dependencies and Build
        shell: bash
        run: |
          cmake --version
          ninja --version
          cmake -B ${{ env.BUILD_DIR }} -GNinja -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake"
          cmake --build ${{ env.BUILD_DIR }} --target all
